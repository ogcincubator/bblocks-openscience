

{
  "itemIdentifier": "ogc.osc.application-package",
  "name": "Application Package",
  "highlighted": true,
  "abstract": "Earth Observation Application Package. ",
  "status": "under-development",
  "dateTimeAddition": "2023-09-18T00:00:00Z",
  "itemClass": "schema",
  "register": "ogc-incubator",
  "dependsOn": [
    "ogc.osc.api-profiles.processes-workflow"
  ],
  "version": "0.1",
  "dateOfLastChange": "2025-10-22",
  "link": "https://github.com/opengeospatial/geodcat-ogcapi-records",
  "sources": [
    {
      "title": "Earth Observation Application Package",
      "link": "https://github.com/eoap"
    }
  ],
  "scope": "dev",
  "tags": [],
  "shaclShapes": {},
  "ldContext": "https://ogcincubator.github.io/bblocks-openscience/_sources/application-package/context.jsonld",
  "schema": {
    "application/yaml": "https://ogcincubator.github.io/bblocks-openscience/build/annotated/osc/application-package/schema.yaml",
    "application/json": "https://ogcincubator.github.io/bblocks-openscience/build/annotated/osc/application-package/schema.json"
  },
  "sourceSchema": "https://ogcincubator.github.io/bblocks-openscience/_sources/application-package/schema.yaml",
  "sourceLdContext": "https://ogcincubator.github.io/bblocks-openscience/_sources/application-package/context.jsonld",
  "sourceFiles": "https://ogcincubator.github.io/bblocks-openscience/_sources/application-package/",
  "rdfData": [],
  "validationPassed": true,
  "testOutputs": "https://github.com/ogcincubator/bblocks-openscience/blob/master/build/tests/osc/application-package/",
  "description": "## Example Application Pacakge\n\nCWL profile \n\nTodo: define what makes this unique. Refactor CWL as a building block - or link to previous work by @avillar",
  "examples": [
    {
      "title": "Waterbodies Detection",
      "content": "Application Package\n",
      "snippets": [
        {
          "language": "yaml",
          "ref": "https://raw.githubusercontent.com/tjellicoe-tpzuk/eo-workflow-examples/refs/heads/main/water-bodies/water-bodies.cwl",
          "base-uri": "https://ogc.org/demo/ospd/",
          "code": "cwlVersion: v1.0\n$namespaces:\n  s: https://schema.org/\ns:softwareVersion: 1.4.1\nschemas:\n  - http://schema.org/version/9.0/schemaorg-current-http.rdf\n$graph:\n  - class: Workflow\n    id: water_bodies\n    label: Water bodies detection based on NDWI and otsu threshold\n    doc: Water bodies detection based on NDWI and otsu threshold and generate a STAC catalog for the outputs\n    requirements:\n      - class: ScatterFeatureRequirement\n      - class: SubworkflowFeatureRequirement\n    inputs:\n      aoi:\n        label: area of interest\n        doc: area of interest as a bounding box\n        type: string\n      epsg:\n        label: EPSG code\n        doc: EPSG code\n        type: string\n        default: \"EPSG:4326\"\n      stac_items:\n        label: Sentinel-2 STAC items\n        doc: list of Sentinel-2 COG STAC items\n        type: string[]\n      bands:\n        label: bands used for the NDWI\n        doc: bands used for the NDWI\n        type: string[]\n        default: [\"green\", \"nir\"]\n    outputs:\n      - id: stac_catalog\n        outputSource:\n          - node_stac/stac_catalog\n        type: Directory\n    steps:\n      node_water_bodies:\n        run: \"#detect_water_body\"\n        in:\n          item: stac_items\n          aoi: aoi\n          epsg: epsg\n          bands: bands\n        out:\n          - detected_water_body\n        scatter: item\n        scatterMethod: dotproduct\n      node_stac:\n        run: \"#stac\"\n        in:\n          item: stac_items\n          rasters:\n            source: node_water_bodies/detected_water_body\n        out:\n          - stac_catalog\n  - class: Workflow\n    id: detect_water_body\n    label: Water body detection based on NDWI and otsu threshold\n    doc: Water body detection based on NDWI and otsu threshold\n    requirements:\n      - class: ScatterFeatureRequirement\n    inputs:\n      aoi:\n        doc: area of interest as a bounding box\n        type: string\n      epsg:\n        doc: EPSG code\n        type: string\n        default: \"EPSG:4326\"\n      bands:\n        doc: bands used for the NDWI\n        type: string[]\n      item:\n        doc: STAC item\n        type: string\n    outputs:\n      - id: detected_water_body\n        outputSource:\n          - node_otsu/binary_mask_item\n        type: File\n    steps:\n      node_crop:\n        run: \"#crop\"\n        in:\n          item: item\n          aoi: aoi\n          epsg: epsg\n          band: bands\n        out:\n          - cropped\n        scatter: band\n        scatterMethod: dotproduct\n      node_normalized_difference:\n        run: \"#norm_diff\"\n        in:\n          rasters:\n            source: node_crop/cropped\n        out:\n          - ndwi\n      node_otsu:\n        run: \"#otsu\"\n        in:\n          raster:\n            source: node_normalized_difference/ndwi\n        out:\n          - binary_mask_item\n  - class: CommandLineTool\n    id: crop\n    requirements:\n      InlineJavascriptRequirement: {}\n      EnvVarRequirement:\n        envDef:\n          PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n          PYTHONPATH: /app\n      ResourceRequirement:\n        coresMax: 1\n        ramMax: 512\n    hints:\n      DockerRequirement:\n        dockerPull: ghcr.io/terradue/ogc-eo-application-package-hands-on/crop:1.5.0\n    baseCommand: [\"python\", \"/app/app.py\"]\n    arguments: []\n    inputs:\n      item:\n        type: string\n        inputBinding:\n          prefix: --input-item\n      aoi:\n        type: string\n        inputBinding:\n          prefix: --aoi\n      epsg:\n        type: string\n        inputBinding:\n          prefix: --epsg\n      band:\n        type: string\n        inputBinding:\n          prefix: --band\n    outputs:\n      cropped:\n        outputBinding:\n          glob: '*.tif'\n        type: File\n  - class: CommandLineTool\n    id: norm_diff\n    requirements:\n      InlineJavascriptRequirement: {}\n      EnvVarRequirement:\n        envDef:\n          PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n          PYTHONPATH: /app\n      ResourceRequirement:\n        coresMax: 1\n        ramMax: 512\n    hints:\n      DockerRequirement:\n        dockerPull: ghcr.io/terradue/ogc-eo-application-package-hands-on/norm_diff:1.5.0\n    baseCommand: [\"python\", \"/app/app.py\"]\n    arguments: []\n    inputs:\n      rasters:\n        type: File[]\n        inputBinding:\n          position: 1\n    outputs:\n      ndwi:\n        outputBinding:\n          glob: '*.tif'\n        type: File\n  - class: CommandLineTool\n    id: otsu\n    requirements:\n      InlineJavascriptRequirement: {}\n      EnvVarRequirement:\n        envDef:\n          PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n          PYTHONPATH: /app\n      ResourceRequirement:\n        coresMax: 1\n        ramMax: 512\n    hints:\n      DockerRequirement:\n        dockerPull: ghcr.io/terradue/ogc-eo-application-package-hands-on/otsu:1.5.0\n    baseCommand: [\"python\", \"/app/app.py\"]\n    arguments: []\n    inputs:\n      raster:\n        type: File\n        inputBinding:\n          position: 1\n    outputs:\n      binary_mask_item:\n        outputBinding:\n          glob: '*.tif'\n        type: File\n  - class: CommandLineTool\n    id: stac\n    requirements:\n      InlineJavascriptRequirement: {}\n      EnvVarRequirement:\n        envDef:\n          PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n          PYTHONPATH: /app\n      ResourceRequirement:\n        coresMax: 1\n        ramMax: 512\n    hints:\n      DockerRequirement:\n        dockerPull: ghcr.io/terradue/ogc-eo-application-package-hands-on/stac:1.5.0\n    baseCommand: [\"python\", \"/app/app.py\"]\n    arguments: []\n    inputs:\n      item:\n        type:\n          type: array\n          items: string\n          inputBinding:\n            prefix: --input-item\n      rasters:\n        type:\n          type: array\n          items: File\n          inputBinding:\n            prefix: --water-body\n    outputs:\n      stac_catalog:\n        outputBinding:\n          glob: .\n        type: Directory\n",
          "url": "https://ogcincubator.github.io/bblocks-openscience/build/tests/osc/application-package/example_1_1.yaml"
        }
      ]
    }
  ],
  "annotatedSchema": "$schema: https://json-schema.org/draft/2020-12/schema\ndescription: Schema for OGCAPI records profile for GeoDCAT - defines all extra elements\n  defined by GeoDCAT so that the JSON-LD context can map to GeoDCAT RDF\nallOf:\n- $ref: https://raw.githubusercontent.com/common-workflow-language/cwl-v1.2/refs/heads/main/json-schema/cwl.yaml\n",
  "gitRepository": "https://github.com/ogcincubator/bblocks-openscience",
  "gitPath": "_sources/application-package"
}